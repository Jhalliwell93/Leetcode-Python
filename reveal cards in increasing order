# This code is a solution to the Leetcode Algorithym Challenge "https://leetcode.com/problems/reveal-cards-in-increasing-order/"
# The aim of the challenge is to write a piece of code that will sort an deck of cards into an order were the lowest value card will be first, then the card behind it is shuffled to the back. 
# This process is repeated until there are no more cards.


class Solution:
    def deckRevealedIncreasing(self, deck: List[int]) -> List[int]:
        # Create an array to store the answer, sort the deck of cards from highest to lowest
        newarray = []
        deck = sorted(deck, reverse=True)

        # Enter a loop while the deck still has cards in it
        while deck:
            if len(newarray) > 1:
                # If the length of the newarray is greater then one, take the card at the back and put it to the front
                newarray = [newarray[-1]] + newarray[:-1]
            # Place a card with a value of the first card in the deck, at the beginning of the newarray
            newarray.insert(0,deck[0])
            # Remove the card from the deck
            deck.pop(0)


        return newarray 
